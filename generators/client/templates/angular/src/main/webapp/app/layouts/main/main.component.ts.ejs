<%#
 Copyright 2013-2018 the original author or authors from the JHipster project.

 This file is part of the JHipster project, see http://www.jhipster.tech/
 for more information.

 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
-%>
import { Component, OnInit } from '@angular/core';
import { Router, ActivatedRouteSnapshot, NavigationEnd } from '@angular/router';

import { ToasterService, ToasterType, ToasterTitle } from '@fhlbny-ui-commons/components';

<%_ if (enableTranslation) { _%>
import { JhiLanguageHelper } from '../../shared';
<%_ } else { _%>
import { Title } from '@angular/platform-browser';
<%_ } _%>

import { MenuModel } from '@fhlbny-ui-commons/navbar';
import { appName, mainMenuList } from '../main/topbar.config';
import { AuthenticationService } from '@fhlbny-ui-commons/core';

@Component({
    selector: '<%= jhiPrefixDashed %>-main',
    templateUrl: './main.component.html'
})
export class <%=jhiPrefixCapitalized%>MainComponent implements OnInit {
    public appName: string;
    public mainMenuList: MenuModel[];
    public showTopbar: boolean;
    constructor(
        <%_ if (enableTranslation) { _%>
        private jhiLanguageHelper: JhiLanguageHelper,
        <%_ } else { _%>
        private titleService: Title,
        <%_ } _%>
        private router: Router,
        private authService: AuthenticationService,
        private toaster: ToasterService
    ) {
        this.appName = appName;
        this.mainMenuList = mainMenuList;
    }
private getPageTitle(routeSnapshot: ActivatedRouteSnapshot) {
        let title: string = (routeSnapshot.data && routeSnapshot.data['pageTitle']) ? routeSnapshot.data['pageTitle'] : '<%= angularAppName %>';
        if (routeSnapshot.firstChild) {
            title = this.getPageTitle(routeSnapshot.firstChild) || title;
        }
        return title;
    }

    ngOnInit() {
         // To get values to decide whether to show menu or not
         this.showTopbar = this.authService.user.isAuthenticated && this.authService.user.isAuthorized;
         // TO get the userdetails initialized using custom login
         this.authService.userDetails.subscribe(
             (userDetails) => {
                 this.showTopbar = userDetails.isAuthenticated && userDetails.isAuthorized;
             }
         );
        this.router.events.subscribe((event) => {
            if (event instanceof NavigationEnd) {
                <%_ if (enableTranslation) { _%>
                this.jhiLanguageHelper.updateTitle(this.getPageTitle(this.router.routerState.snapshot.root));
                <%_ } else { _%>
                this.titleService.setTitle(this.getPageTitle(this.router.routerState.snapshot.root));
                <%_ } _%>
            }
        });
        if (this.authService.user.isAuthenticated === false ) {
            this.router.navigate(['/login']);
          } else if (this.authService.user.isAuthorized === false) {
            this.toaster.toast({
                message: 'Roles not assigned to the logged-in user!',
                type: ToasterType.Error,
                title: ToasterTitle.Error
            });
            this.router.navigate(['/login']);
          }
    }
     /**
    * The method invoked when the userloggedout event occurs from user-menu child component.
    */
    onUserLoggedOut($event) {
        this.router.navigate(['/login']);
    }
}
