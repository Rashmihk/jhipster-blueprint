import { Directive, Host, HostListener, Input, ElementRef, Renderer, AfterViewInit } from '@angular/core';
import { SortDirective } from './sort.directive';

@Directive({
    selector: '[fhlbnySortBy]'
})
export class SortByDirective implements AfterViewInit {

    @Input() fhlbnySortBy: string;

    sortAscIcon = 'fa-sort-asc';
    sortDescIcon = 'fa-sort-desc';

    jhiSort: SortDirective;

    constructor(@Host() jhiSort: SortDirective, private el: ElementRef, private renderer: Renderer) {
        this.jhiSort = jhiSort;
    }

    ngAfterViewInit(): void {
        if (this.jhiSort.predicate && this.jhiSort.predicate !== '_score' && this.jhiSort.predicate === this.fhlbnySortBy) {
            this.applyClass();
        }
    }

    @HostListener('click') onClick() {
        if (this.jhiSort.predicate && this.jhiSort.predicate !== '_score') {
            this.jhiSort.sort(this.fhlbnySortBy);
            this.applyClass();
        }
    }

    private applyClass() {
        const childSpan = this.el.nativeElement.children[1];
        let add = this.sortAscIcon;
        if (!this.jhiSort.ascending) {
            add = this.sortDescIcon;
        }
        this.renderer.setElementClass(childSpan, add, true);
    }
}
